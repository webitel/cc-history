import i18n from '../../../../locale/i18n';

export default [
  {
    text: () => i18n.t('fields.date'),
    value: 'date',
    show: true,
    sort: null,
    field: 'created_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.time'),
    value: 'time',
    show: true,
    sort: null,
    field: 'created_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.direction'),
    value: 'direction',
    show: true,
    sort: null,
    field: 'direction',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.answeredAt'),
    value: 'answeredAt',
    show: false,
    sort: null,
    field: 'answered_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.bridgedAt'),
    value: 'bridgedAt',
    show: false,
    sort: null,
    field: 'bridged_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.queueBridgedAt'),
    value: 'queueBridgedAt',
    show: false,
    sort: null,
    field: 'queue_bridged_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.joinedAt'),
    value: 'joinedAt',
    show: false,
    sort: null,
    field: 'joined_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.leavingAt'),
    value: 'leavingAt',
    show: false,
    sort: null,
    field: 'leaving_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.hangupAt'),
    value: 'hangupAt',
    show: false,
    sort: null,
    field: 'hangup_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.reportingAt'),
    value: 'reportingAt',
    show: false,
    sort: null,
    field: 'reporting_at',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.user'),
    value: 'user',
    show: true,
    sort: null,
    field: 'user',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.extension'),
    value: 'extension',
    show: false,
    sort: null,
    field: 'extension',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.from'),
    value: 'from',
    show: true,
    sort: null,
    field: 'from',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.to'),
    value: 'to',
    show: true,
    sort: null,
    field: 'to',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.destination'),
    value: 'destination',
    show: true,
    sort: null,
    field: 'destination',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.gateway'),
    value: 'gateway',
    show: false,
    sort: null,
    field: 'gateway',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.agent'),
    value: 'agent',
    show: false,
    sort: null,
    field: 'agent',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.team'),
    value: 'team',
    show: false,
    sort: null,
    field: 'team',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.queue'),
    value: 'queue',
    show: false,
    sort: null,
    field: 'queue',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.member'),
    value: 'member',
    show: false,
    sort: null,
    field: 'member',
    width: 'minmax(120px, 1fr)',
  },
  // {
  //   text: i18n.t('fields.hangupBy'),
  //   value: 'hangupBy',
  //   show: false,
  //   sort: null,
  //   field: 'hangup_by',
  //   width: 'minmax(120px, 1fr)',
  // },
  {
    text: () => i18n.t('fields.duration'),
    value: 'duration',
    show: true,
    sort: null,
    field: 'duration',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.tags'),
    value: 'tags',
    show: false,
    sort: null,
    field: 'tags',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.display'),
    value: 'display',
    show: false,
    sort: null,
    field: 'display',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.holdSec'),
    value: 'holdSec',
    show: false,
    sort: null,
    field: 'hold_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.waitSec'),
    value: 'waitSec',
    show: false,
    sort: null,
    field: 'wait_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.billSec'),
    value: 'billSec',
    show: true,
    sort: null,
    field: 'bill_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.reportingSec'),
    value: 'reportingSec',
    show: false,
    sort: null,
    field: 'reporting_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.queueWaitSec'),
    value: 'queueWaitSec',
    show: false,
    sort: null,
    field: 'queue_wait_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.queueDurationSec'),
    value: 'queueDurationSec',
    show: false,
    sort: null,
    field: 'queue_duration_sec',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.result'),
    value: 'result',
    show: false,
    sort: null,
    field: 'result',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.sipCode'),
    value: 'sipCode',
    show: false,
    sort: null,
    field: 'sip_code',
    width: 'minmax(120px, 1fr)',
  },
  {
    text: () => i18n.t('fields.cause'),
    value: 'cause',
    show: true,
    sort: null,
    field: 'cause',
    width: 'minmax(120px, 1fr)',
  },
];
